buildscript {
    ext.kotlin_version = '1.2.71'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.15.0" apply false
    id "kotlin" apply false
}

subprojects {
    group 'me.marolt'
    version '0.1-SNAPSHOT'

    apply plugin: "com.diffplug.gradle.spotless"
    apply plugin: "kotlin"

    dependencies {
        compile "io.github.microutils:kotlin-logging:1.5.4"
        compile "io.github.microutils:kotlin-logging:1.5.4"

        testCompile "org.junit.jupiter:junit-jupiter-api:5.2.0"
        testRuntime "org.junit.jupiter:junit-jupiter-engine:5.2.0"
        testRuntime "org.apache.logging.log4j:log4j-slf4j-impl:2.11.0"
    }

    sourceCompatibility = 1.8

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    kotlin {
        experimental {
            coroutines "enable"
        }
    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed"
        }

        reports {
            html.enabled = true
        }
    }

    spotless {
        kotlin {
            target "**/*.kt"
            ktlint()

            licenseHeaderFile "${rootProject.projectDir}/LICENSE"		// License header file
        }
    }
}


task resolveDependencies {
    doLast {
        project.rootProject.allprojects.each { subProject ->
            subProject.buildscript.configurations.each { configuration ->
                if (configuration.isCanBeResolved()) {
                    configuration.resolve()
                }
            }
            subProject.configurations.each { configuration ->
                if (configuration.isCanBeResolved()) {
                    configuration.resolve()
                }
            }
        }
    }
}